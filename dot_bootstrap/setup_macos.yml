---
- name: MacOS machine setup
  hosts: all
  connection: local
  gather_facts: true
  
  vars:
    ansible_python_interpreter: /usr/bin/python3
    remote_regular_user: "{{ lookup('env', 'USER') }}"  # Auto-detect current user
    homebrew_casks:
      - docker
      - visual-studio-code
      - ghostty
      - obsidian
    homebrew_packages:
      - fish
      - fisher
      - tmux
      - starship
      - age
      - git
      - lazygit
      - make
      - uv
      - bob
      - docker-compose
      - autossh
      - mutagen-io/mutagen/mutagen
      - eza
      - fastfetch

  tasks:
    #--------- brew stuff ---------
    - name: Install Homebrew casks
      community.general.homebrew_cask:
        name: "{{ item }}"
        state: present
      loop: "{{ homebrew_casks }}"
    - name: Install Homebrew packages
      community.general.homebrew:
        name: "{{ item }}"
        state: present
      with_items: "{{ homebrew_packages }}"
    - name: Get brew prefix
      ansible.builtin.command: brew --prefix
      register: brew_prefix
    #--------- fish stuff ---------
    - name: Ensure fish is in /etc/shells
      become: true
      ansible.builtin.lineinfile:
        path: /etc/shells
        line: "{{ brew_prefix.stdout }}/bin/fish"
        state: present
    - name: Change shell to fish for remote user
      become: true
      ansible.builtin.user:
        name: "{{ remote_regular_user }}"
        shell: "{{ brew_prefix.stdout }}/bin/fish"
    - name: Run fisher update
      ansible.builtin.shell: |
        fish -c 'fisher update'
      args:
        executable: /bin/bash
      become: false
      environment:
        HOME: "/Users/{{ ansible_user_id }}"
      when: ansible_user_id != 'root'
    #--------- rust stuff ---------
    - name: Setup neovim with bob
      become: true
      become_user: root
      ansible.builtin.shell: |
        bob install stable
        bob use stable 
